{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","components/PeoplePage/PersonName.tsx","components/PeoplePage/TableHeader.tsx","components/Search/Search.tsx","components/PeoplePage/PeoplePage.tsx","api/index.js","App.tsx","index.tsx"],"names":["Header","className","to","exact","activeClassName","Homepage","PageNotFound","PersonName","personName","person","name","paramsName","people","search","useLocation","lowerName","toLowerCase","isPersonInList","some","item","split","join","born","cn","blue","sex","red","bold","TableHeader","sortBy","title","searchParams","useState","order","setOrder","history","useHistory","sortByOrder","get","lowerTitle","toLocaleLowerCase","data-name","onClick","e","selector","currentTarget","attributes","getNamedItem","value","set","push","toString","Search","query","htmlFor","id","type","onChange","target","delete","PeoplePage","setPeople","location","URLSearchParams","selectors","params","useParams","useEffect","fetch","then","res","ok","Error","status","json","peopleWithParents","map","mother","motherName","father","fatherName","filtredPeople","useMemo","filter","includes","sort","personA","personB","localeCompare","getfiltredPeople","arrFromName","slice","length","parsParamsName","key","classNames","row","died","App","path","component","HomePage","ReactDOM","render","document","getElementById"],"mappings":"kPAgBeA,G,MAbA,kBACb,gCACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAACF,UAAU,WAAWG,gBAAgB,UAA3D,QAGA,kBAAC,IAAD,CAASF,GAAG,UAAUD,UAAU,WAAWG,gBAAgB,UAA3D,cCHSC,EAJE,WACf,OAAO,0CCDIC,EAAe,WAC1B,OACA,gD,wBCsDaC,EAtCV,SAAC,GAA0C,IAGtBC,EAHlBC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,OACxBC,EAAWC,cAAXD,OAaFE,EAAYN,EAAOC,KAAKM,cACxBC,EAAiBL,EAAOM,MAAK,SAACC,GAAD,OAAUT,IAASS,EAAKT,QAE3D,OACE,kBAAC,IAAD,CACER,GAAE,mBAhBkBM,EAgBUE,EAf5BF,EAEAA,EAAWQ,cAAcI,MAAM,KAAKC,KAAK,KAAzC,WAAoDZ,EAAOa,MAKxD,KAQH,OAAoCT,GACtCZ,UAAWsB,IACT,YACA,CACEC,KAAMb,IAAeI,GAA4B,MAAfN,EAAOgB,KAE3C,CACEC,IAAKf,IAAeI,GAA4B,MAAfN,EAAOgB,KAE1C,CACEE,KAAMjB,GAAQC,IAAeD,EAAKM,gBAAkBC,KAIvDP,ICjBQkB,EA7BV,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAAmB,EACdC,mBAAS,OADK,mBACjCC,EADiC,KAC1BC,EAD0B,KAElCC,EAAUC,cACVC,EAAcN,EAAaO,IAAI,eAC/BC,EAAaT,EAAMU,oBAczB,OACE,wBAAIC,YAAWX,EAAMd,cAAe0B,QAbtB,SAACC,GAAyD,IAAD,EACjEC,EAAQ,UAAGD,EAAEE,cAAcC,WAAWC,aAAa,oBAA3C,aAAG,EACbC,MAEAJ,IACFb,EAAakB,IAAI,SAAUL,GAC3Bb,EAAakB,IAAI,cAAehB,GAChCC,EAAmB,QAAVD,EAAkB,OAAS,OACpCE,EAAQe,KAAR,WAAiBnB,EAAaoB,gBAM9B,0BAAMlD,UAAU,SACb6B,EADH,IACWD,IAAWC,EAAMd,eAAiB,KAE5B,QAAhBqB,GAAyBR,IAAWU,EACpB,SAAhBF,GAA0BR,IAAWU,IC5B/Ba,EAAsD,SAAC,GAE7D,IADLrB,EACI,EADJA,aAEMsB,EAAQtB,EAAaO,IAAI,UAAY,GACrCH,EAAUC,cAYhB,OACE,0BAAMnC,UAAU,QACd,2BAAOqD,QAAQ,UAAf,UACA,2BACEC,GAAG,SACHP,MAAOK,GAAgB,GACvBG,KAAK,OACLC,SAjBW,SAACd,GACZA,EAAEe,OAAOV,MACXjB,EAAakB,IAAI,QAASN,EAAEe,OAAOV,OAEnCjB,EAAa4B,OAAO,SAGtBxB,EAAQe,KAAR,WAAiBnB,EAAaoB,kBCuInBS,EApII,WAAO,IAAD,EACK5B,mBAAmB,IADxB,mBAChBpB,EADgB,KACRiD,EADQ,KAEjBC,EAAWhD,cACXiB,EAAe,IAAIgC,gBAAgBD,EAASjD,QAC5CgB,EAASE,EAAaO,IAAI,UAC1BD,EAAcN,EAAaO,IAAI,eAC/B0B,EAAY,CAAC,OAAQ,MAAO,OAAQ,QAEpCX,EAAQtB,EAAaO,IAAI,UAAY,GAErC2B,EAA6BC,cAmCnCC,qBAAU,WC7DHC,MAHQ,qEAGQC,MAAK,SAACC,GAC3B,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAJ,UAAaF,EAAIG,SAGzB,OAAOH,EAAII,UDyDCL,MAAK,SAACzD,GAChB,IAAM+D,EAAoB/D,EAAOgE,KAAI,SAACnE,GAGpC,OAFAA,EAAOoE,OAASpE,EAAOqE,WACvBrE,EAAOsE,OAAStE,EAAOuE,WAChBvE,KAEToD,EAAUc,QAEX,CAAC/D,IAEJ,IAAMqE,EAAgBC,mBAAQ,kBA5CP,WACrB,IAAID,EAAgB5B,EAChBzC,EAAOuE,QACL,SAAC1E,GAAD,OACEA,EAAOC,KAAKM,cAAcoE,SAAS/B,IAClC5C,EAAOuE,YACNvE,EAAOuE,WAAWhE,cAAcoE,SAAS/B,IAC1C5C,EAAOqE,YACNrE,EAAOqE,WAAW9D,cAAcoE,SAAS/B,MAE/CzC,EAoBJ,OAlBIiB,GAAUmC,EAAU9C,MAAK,SAACC,GAAD,OAAUA,IAASU,OAC9CoD,EAAgBA,EAAcI,MAAK,SAACC,EAASC,GAC3C,MAAe,SAAX1D,GAAgC,QAAXA,EACA,QAAhBQ,GAA0BA,EAE7BkD,EAAQ1D,GAAQ2D,cAAcF,EAAQzD,IADtCyD,EAAQzD,GAAQ2D,cAAcD,EAAQ1D,IAI7B,SAAXA,GAAgC,SAAXA,EACA,QAAhBQ,GAA0BA,EAE7BkD,EAAQ1D,GAAUyD,EAAQzD,GAD1ByD,EAAQzD,GAAU0D,EAAQ1D,GAIzB,MAIJoD,EAc2BQ,KAAoB,CACtDpC,EACAhB,EACAR,EACAjB,IAcID,EAXiB,WACrB,GAAIsD,EAAOxD,OAAQ,CACjB,IAAMiF,EAAczB,EAAOxD,OAAOW,MAAM,KAGxC,OAFmBsE,EAAYC,MAAM,EAAGD,EAAYE,OAAS,GAAGvE,KAAK,KAKvE,MAAO,GAGUwE,GAEnB,OACE,6BACE,kBAAC,EAAD,CAAQ9D,aAAcA,IACtB,+BACE,+BACE,4BA1Ea,CAAC,OAAQ,MAAO,OAAQ,QA2ErB6C,KAAI,SAACzD,GAAD,OAChB,kBAAC,EAAD,CACEU,OAAQA,EACRC,MAAOX,EACPY,aAAcA,EACd+D,IAAK3E,OAGT,sCACA,wCAGJ,+BACG8D,EAAcL,KAAI,SAACnE,GAAD,OACb,wBAAIR,UAAW8F,IAAW,CAAEC,IAAKrF,IAAeF,EAAOC,KAAKM,iBAC5D,wBAAIf,UAAU,eACZ,kBAAC,EAAD,CACEQ,OAAQA,EACRC,KAAMD,EAAOC,KACbC,WAAYA,EACZC,OAAQA,KAGZ,4BAAKH,EAAOgB,KACZ,4BAAKhB,EAAOa,MACZ,4BAAKb,EAAOwF,MACZ,4BACE,kBAAC,EAAD,CACExF,OAAQA,EACRC,KAAMD,EAAOoE,OACblE,WAAYA,EACZC,OAAQA,KAGZ,4BACE,kBAAC,EAAD,CACEH,OAAQA,EACRC,KAAMD,EAAOsE,OACbpE,WAAYA,EACZC,OAAQA,aEpHbsF,EAfO,WACpB,OACE,yBAAKjG,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkG,KAAK,IAAIhG,OAAK,EAACiG,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWxC,IAC1C,kBAAC,IAAD,CAAUuC,KAAK,QAAQjG,GAAG,MAC1B,kBAAC,IAAD,CAAUiG,KAAK,UAAUjG,GAAG,MAC5B,kBAAC,EAAD,SCZRoG,IAASC,OACP,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.04179e4e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <header>\n    <nav className=\"nav\">\n      <NavLink to=\"/\" exact className=\"nav-item\" activeClassName=\"active\">\n        Home\n      </NavLink>\n      <NavLink to=\"/people\" className=\"nav-item\" activeClassName=\"active\">\n        People\n      </NavLink>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Homepage = () => {\n  return <div>Homepage</div>;\n};\n\nexport default Homepage;\n","import React from 'react';\n\nexport const PageNotFound = () => {\n  return (\n  <div>\n    Page not found\n  </div>\n  )\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Person {\n  name: string;\n  sex: string;\n  born: number;\n  died: number;\n  father: string;\n  mother: string;\n  motherName: string;\n  fatherName: string;\n}\n\nconst PersonName: React.FC<{\n  person: Person;\n  name: string;\n  paramsName: string;\n  people: Person[]\n}> = ({ person, name, paramsName, people }) => {\n  const { search } = useLocation();\n\n  const createQueryStr = (personName: string) => {\n    if (personName) {\n      const queryStr =\n        personName.toLowerCase().split(' ').join('-') + `-${person.born}`;\n\n      return queryStr;\n    }\n\n    return '';\n  };\n\n  const lowerName = person.name.toLowerCase();\n  const isPersonInList = people.some((item) => name === item.name);\n\n  return (\n    <Link\n      to={`/people/${createQueryStr(name)}${search}`}\n      className={cn(\n        'name-link',\n        {\n          blue: paramsName === lowerName && person.sex === 'm',\n        },\n        {\n          red: paramsName === lowerName && person.sex === 'f',\n        },\n        {\n          bold: name && paramsName === name.toLowerCase() && !isPersonInList,\n        }\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n\nexport default PersonName;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst TableHeader: React.FC<{\n  sortBy: string | null;\n  title: string;\n  searchParams: URLSearchParams;\n}> = ({ sortBy, title, searchParams }) => {\n  const [order, setOrder] = useState('asc');\n  const history = useHistory();\n  const sortByOrder = searchParams.get('sortByOrder');\n  const lowerTitle = title.toLocaleLowerCase();\n\n  const onClick = (e: React.MouseEvent<HTMLTableDataCellElement>): void => {\n    const selector = e.currentTarget.attributes.getNamedItem('data-name')\n      ?.value;\n\n    if (selector) {\n      searchParams.set('sortBy', selector);\n      searchParams.set('sortByOrder', order);\n      setOrder(order === 'asc' ? 'desc' : 'asc');\n      history.push(`?${searchParams.toString()}`);\n    }\n  };\n\n  return (\n    <td data-name={title.toLowerCase()} onClick={onClick}>\n      <span className=\"title\">\n        {title} {sortBy === title.toLowerCase() && '*'}\n      </span>\n      {sortByOrder === 'asc' && sortBy === lowerTitle}\n      {sortByOrder === 'desc' && sortBy === lowerTitle}\n    </td>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const Search: React.FC<{ searchParams: URLSearchParams }> = ({\n  searchParams,\n}) => {\n  const query = searchParams.get('query') || '';\n  const history = useHistory();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value) {\n      searchParams.set('query', e.target.value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  return (\n    <form className=\"form\">\n      <label htmlFor=\"search\">Search</label>\n      <input\n        id=\"search\"\n        value={query ? query : ''}\n        type=\"text\"\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { getPeople } from '../../api';\nimport { useLocation, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PersonName from './PersonName';\nimport TableHeader from './TableHeader';\nimport { Search} from '../Search/Search';\n\nexport interface Person {\n  name: string;\n  sex: string;\n  born: number;\n  died: number;\n  father: string;\n  mother: string;\n  motherName: string;\n  fatherName: string;\n}\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy');\n  const sortByOrder = searchParams.get('sortByOrder');\n  const selectors = ['name', 'sex', 'born', 'died'];\n  const tableHeaders = ['Name', 'Sex', 'Born', 'Died'];\n  const query = searchParams.get('query') || '';\n\n  const params: { person: string } = useParams();\n\n  let getfiltredPeople = () => {\n    let filtredPeople = query\n      ? people.filter(\n          (person) =>\n            person.name.toLowerCase().includes(query) ||\n            (person.fatherName &&\n              person.fatherName.toLowerCase().includes(query)) ||\n            (person.motherName &&\n              person.motherName.toLowerCase().includes(query))\n        )\n      : people;\n\n    if (sortBy && selectors.some((item) => item === sortBy)) {\n      filtredPeople = filtredPeople.sort((personA, personB): number => {\n        if (sortBy === 'name' || sortBy === 'sex') {\n          return sortByOrder === 'asc' || !sortByOrder\n            ? personA[sortBy].localeCompare(personB[sortBy])\n            : personB[sortBy].localeCompare(personA[sortBy]);\n        }\n\n        if (sortBy === 'born' || sortBy === 'died') {\n          return sortByOrder === 'asc' || !sortByOrder\n            ? personA[sortBy] - personB[sortBy]\n            : personB[sortBy] - personA[sortBy];\n        }\n\n        return 0;\n      });\n    }\n\n    return filtredPeople;\n  };\n\n  useEffect(() => {\n    getPeople().then((people) => {\n      const peopleWithParents = people.map((person: Person) => {\n        person.mother = person.motherName;\n        person.father = person.fatherName;\n        return person;\n      });\n      setPeople(peopleWithParents);\n    });\n  }, [people]);\n\n  const filtredPeople = useMemo(() => getfiltredPeople(), [\n    query,\n    sortByOrder,\n    sortBy,\n    people,\n  ]);\n\n  const parsParamsName = () => {\n    if (params.person) {\n      const arrFromName = params.person.split('-');\n      const paramsName = arrFromName.slice(0, arrFromName.length - 1).join(' ');\n\n      return paramsName;\n    }\n\n    return '';\n  };\n\n  const paramsName = parsParamsName();\n\n  return (\n    <div>\n      <Search searchParams={searchParams} />\n      <table>\n        <thead>\n          <tr>\n            {tableHeaders.map((item) => (\n              <TableHeader\n                sortBy={sortBy}\n                title={item}\n                searchParams={searchParams}\n                key={item}\n              />\n            ))}\n            <td>Mother</td>\n            <td>Father</td>\n          </tr>\n        </thead>\n        <tbody>\n          {filtredPeople.map((person) => (\n                <tr className={classNames({ row: paramsName === person.name.toLowerCase() })}>\n                <td className=\"person-name\">\n                  <PersonName\n                    person={person}\n                    name={person.name}\n                    paramsName={paramsName}\n                    people={people}\n                  />\n                </td>\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>\n                  <PersonName\n                    person={person}\n                    name={person.mother}\n                    paramsName={paramsName}\n                    people={people}\n                  />\n                </td>\n                <td>\n                  <PersonName\n                    person={person}\n                    name={person.father}\n                    paramsName={paramsName}\n                    people={people}\n                  />\n                </td>\n              </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","const BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = () => {\n  return fetch(BASE_URL).then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status}`);\n    }\n\n    return res.json();\n  });\n};","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport HomePage from './components/HomePage/HomePage';\nimport { PageNotFound } from './components/PageNotFound/PageNotFound';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/people/:person?\" component={PeoplePage} />\n        <Redirect path=\"/home\" to=\"/\" />\n        <Redirect path=\"/people\" to=\"/\" />\n        <PageNotFound />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n      <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}